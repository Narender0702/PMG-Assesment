##Create database
CREATE DATABASE assesment;

##Create marketing_data and store_revenue table
CREATE TABLE store_revenue (
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    date DATETIME,
    brand_id INT,
    store_location VARCHAR(250),
    revenue FLOAT
);

CREATE TABLE marketing_data (
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    date DATETIME,
    geo VARCHAR(2),
    impressions FLOAT,
    clicks FLOAT
);
#Import data into created tables from given CSV files by using "Table data Import Wizard" option.

##To use the created data base
use assesment;

##Question1: Generate a query to get the sum of the clicks of the marketing data​
SELECT 
    SUM(clicks)
FROM
    marketing_data;
    
    
##Question2: Generate a query to gather the sum of revenue by store_location from the store_revenue table​
SELECT 
    store_location, SUM(revenue) AS revenue
FROM
    store_revenue
GROUP BY store_location;


/*Question #3 Merge these two datasets so we can see impressions, clicks, and revenue together by date and geo. 
Please ensure all records from each table are accounted for.*/
SELECT 
    S.date, S.geo, SUM(R.revenue) as total_revenue, SUM(S.impressions) as total_impressions, SUM(S.clicks) as total_clicks
FROM
    store_revenue R
        JOIN
    marketing_data S ON S.id = R.id
GROUP BY S.geo , S.date;

/*Question #4 In your opinion, what is the most efficient store and why?​
Most efficient store is the one which generates high revenue with minimal marketing requirement.
The other factors which influence the efficiency of store are store_location, it's design, service, appearance and efforts put forward in marketing it.
From give store_revenue data, store with store_location as "United States-CA" is the highest revenue generating store.
The total revenue generated by each store can be calculated by using the query present in Question#2.
*/


##Question #5 (Challenge) Generate a query to rank in order the top 10 revenue producing states​
SELECT 
        store_location, SUM(revenue) as Revenue, DENSE_RANK() OVER (ORDER BY sum(revenue) DESC) as Store_rank
    FROM
        store_revenue
        
    GROUP BY store_location
    limit 10;
